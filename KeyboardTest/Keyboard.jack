// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
    	return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
    	var char pressedKey;
    	let pressedKey = Memory.peek(24576); // keyboard addr.
    	return pressedKey;
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
    	var char pressedKey;
    	let pressedKey = 0;
    	while (pressedKey = 0){
		let pressedKey = Memory.peek(24576); // keyboard addr.
		}

		while (Memory.peek(24576) = pressedKey){
		}

		do Output.printChar(pressedKey);
		return pressedKey;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
    	var char pressedKey;
    	var String input_string;

    	do Output.printString(message);

    	let pressedKey = Keyboard.readChar();
    	let input_string = String.new(80);

    	while (~(pressedKey = String.newLine())){
    		if (pressedKey = String.backSpace()){
    			do input_string.eraseLastChar();
    		} else {
    			do input_string.appendChar(pressedKey);
    		}

    		let pressedKey = Keyboard.readChar();
    	}
    	return input_string;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
    	var String int_string;
    	let int_string = Keyboard.readLine(message);
    	return int_string.intValue();
    }
}
